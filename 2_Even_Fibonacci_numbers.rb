# Even Fibonacci numbers
# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
#   find the sum of the even-valued terms.


# returns an array of all Fibonacci numbers below the user's number
def fib_count(top_num)
  fib_array = [1,2,3]
  while (fib_array[-1] < top_num) do
    t1 = fib_array[-1]
    t2 = fib_array[-2]
    fib_array.push(t1+t2)
  end
  fib_array.pop()
  fib_array
end

# returns the sum all EVEN numbers in an array
def fib_even_sum(user_array)
  sum = 0
  user_array.each do |num|
    if (num % 2 == 0)
      sum += num
    end
  end
  return sum
end


fib_even_sum(fib_count(4000000))
# =>4613732
